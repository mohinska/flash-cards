import csv
import os
import random

def load_questions(subject):
    filename = os.path.join("subjects", f"{subject}.csv")

    full_path = os.path.abspath(filename)
    print("üîç –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —à–ª—è—Ö—É:", full_path)
    
    if not os.path.exists(filename):
        print("‚ùå –§–∞–π–ª –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.")
        return []
    
    with open(filename, newline='', encoding='utf-8') as csvfile:
        reader = csv.DictReader(csvfile)
        return list(reader)

def quiz_mode(questions):
    correct = 0
    total = len(questions)
    wrong = 0
    random.shuffle(questions)

    wrong_questions = []
    for q in questions:
        print("\n‚ùì", q['question'])
        print(f"  A. {q['A']}")
        print(f"  B. {q['B']}")
        print(f"  C. {q['C']}")
        print(f"  D. {q['D']}")
        answer = input("üëâ –í–∞—à–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—å (A/B/C/D), \n–Ø–∫—â–æ —Ö–æ—á–µ—Ç–µ –≤–∏–π—Ç–∏ –Ω–∞–ø–∏—à—ñ—Ç—å q: ").strip().upper()
        if answer == q['correct'].strip().upper():
            print("‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ!")
            correct += 1
        elif answer == "Q":
            break
        else:
            wrong += 1
            print(f"‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ. –ü—Ä–∞–≤–∏–ª—å–Ω–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—å: {q['correct'].upper()}")
            wrong_questions.append(q)
    output = show_statistics(correct, wrong)   
    while output == "retry":
        correct = 0
        total = len(questions)
        wrong = 0
        random.shuffle(questions)
        for q in wrong_questions:
            print("\n‚ùì", q['question'])
            print(f"  A. {q['A']}")
            print(f"  B. {q['B']}")
            print(f"  C. {q['C']}")
            print(f"  D. {q['D']}")
            answer = input("üëâ –í–∞—à–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—å (A/B/C/D), \n–Ø–∫—â–æ —Ö–æ—á–µ—Ç–µ –≤–∏–π—Ç–∏ –Ω–∞–ø–∏—à—ñ—Ç—å q: ").strip().upper()
        if answer == q['correct'].strip().upper():
            print("‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ!")
            correct += 1
        elif answer == "Q":
            break
        else:
            wrong += 1
            print(f"‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ. –ü—Ä–∞–≤–∏–ª—å–Ω–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—å: {q['correct'].upper()}")
            wrong_questions.append(q)
        output = show_statistics(correct, wrong)


        

def main():
    print("üéâ –í—ñ—Ç–∞—î–º–æ —É –≥—Ä—ñ-–∫–≤—ñ–∑—ñ! üéâ")
    print("–í–∏ –æ—Ç—Ä–∏–º–∞—î—Ç–µ –∑–∞–ø–∏—Ç–∞–Ω–Ω—è –∑ 4 –≤–∞—Ä—ñ–∞–Ω—Ç–∞–º–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥–µ–π. –û–±–µ—Ä—ñ—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—É –±—É–∫–≤—É.")
    print("–ì–æ—Ç–æ–≤—ñ? –ü–æ—á–∏–Ω–∞—î–º–æ!\n")
    choice = input("–Ø–∫—â–æ —Ö–æ—á–µ—Ç–µ –≤–∏–±—Ä–∞—Ç–∏ –∑ —Å—Ç–≤–æ—Ä–µ–Ω–∏—Ö —Ç–µ—Å—Ç—ñ–≤, –Ω–∞–ø–∏—à—ñ—Ç—å A, —è–∫—â–æ —Å—Ç–≤–æ—Ä–∏—Ç–∏ —Å–≤—ñ–π –Ω–∞–ø–∏—à—ñ—Ç—å B ")
    if choice == "B" or choice == "–í":
        card, topic = add_card()
        write_card(card, topic)
    subject = input("üîç –í–≤–µ–¥—ñ—Ç—å –Ω–∞–∑–≤—É –ø—Ä–µ–¥–º–µ—Ç–∞ (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, math): ").strip()
    filename = os.path.join("subjects", f"{subject}.csv")
    if not os.path.exists(filename):
        print("–¢–∞–∫–æ—ó —Ç–µ–º–∏ –Ω–µ —ñ—Å–Ω—É—î, —Å—Ç–≤–æ—Ä—ñ—Ç—å —ó—ó —Å–∞–º—ñ")
        card, topic = add_card
        write_card(card, topic)
    questions = load_questions(subject)
    if questions:
        quiz_mode(questions)
    else:
        print("üòï –£–ø—Å! –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –∑–∞–ø–∏—Ç–∞–Ω–Ω—è.")
    print("\nüëã –î—è–∫—É—î–º–æ –∑–∞ –≥—Ä—É!")

def add_card():
    topic = input("–í–≤–µ–¥—ñ—Ç—å —Ç–µ–º—É –∑–∞–ø–∏—Ç–∞–Ω–Ω—è ")
    question = input("–í–≤–µ–¥—ñ—Ç—å –ø–∏—Ç–∞–Ω–Ω—è: ")
    answer = input("–í–≤–µ–¥—ñ—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—É –≤—ñ–¥–ø–æ–≤—ñ–¥—å: ")
    wrong_answer1 = input("–í–≤–µ–¥—ñ—Ç—å –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—É –≤—ñ–¥–ø–æ–≤—ñ–¥—å 1: ")
    wrong_answer2 = input("–í–≤–µ–¥—ñ—Ç—å –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—É –≤—ñ–¥–ø–æ–≤—ñ–¥—å 2: ")
    wrong_answer3 = input("–í–≤–µ–¥—ñ—Ç—å –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—É –≤—ñ–¥–ø–æ–≤—ñ–¥—å 3: ")
    card = {"question": question, "answer": answer, "wrong_answers": [wrong_answer1, wrong_answer2, wrong_answer3]} 
    print(f"\n–ö–∞—Ä—Ç–∫—É –¥–æ–¥–∞–Ω–æ: '{question}' | –ü—Ä–∞–≤–∏–ª—å–Ω–∞: '{answer}'")
    return card, topic

def write_card(card, topic):
    folder = "subjects"
    filename = os.path.join(folder, f"{topic}.csv")
    file_exists = os.path.exists(filename)
    with open(filename, "a", newline = "", encoding = "utf-8") as file:
        writer = csv.writer(file)
        if not file_exists:
            writer.writerow(["question", "A", "B", "C", "D", "correct"])

        answers = card["wrong_answers"].copy()
        answers.append(card["answer"])
        random.shuffle(answers)

        answers_dict = {}
        answer_keys = ["A", "B", "C", "D"]
        for i in range(4):
            answers_dict[answer_keys[i]] = answers[i]
            if answers[i] == card["answer"]:
                right_answer_letter = answer_keys[i]

        writer.writerow([
            card["question"],
            answers_dict["A"],
            answers_dict["B"],
            answers_dict["C"],
            answers_dict["D"],
            right_answer_letter
        ])
    
    
    

def show_statistics(correct_answers, wrong_answers):
    """
    Displays quiz statistics including:
    - Number of correct and wrong answers
    - Percentage score

    Then asks the user what to do next:
    - Option 1: Practice wrong answers again (returns "retry")
    - Option 2: Exit the quiz (returns "exit")

    Parameters:
    - correct_answers (list): List of correctly answered question identifiers
    - wrong_answers (list): List of wrongly answered question identifiers

    Returns:
    - str: "retry" if the user wants to practice wrong answers again
           "exit" if the user wants to finish
    """
    total = correct_answers + wrong_answers
    if total == 0:
        print("‚ö†Ô∏è –ñ–æ–¥–Ω–æ–≥–æ –∑–∞–ø–∏—Ç–∞–Ω–Ω—è –Ω–µ –±—É–ª–æ –ø—Ä–æ–π–¥–µ–Ω–æ.")
        return "exit"

    correct_count = correct_answers
    wrong_count = wrong_answers
    score_percent = round((correct_count / total) * 100, 2)

    print("\nüìä --- –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ç–µ—Å—Ç—É ---")
    print(f"‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–∏—Ö –≤—ñ–¥–ø–æ–≤—ñ–¥–µ–π: {correct_count}")
    print(f"‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏—Ö –≤—ñ–¥–ø–æ–≤—ñ–¥–µ–π: {wrong_count}")
    print(f"üéØ –†–µ–∑—É–ª—å—Ç–∞—Ç: {score_percent}%")

    if wrong_count > 0:
        print("\n–©–æ —Ö–æ—á–µ—à –∑—Ä–æ–±–∏—Ç–∏ –¥–∞–ª—ñ?")
        print("1. üîÅ –ü–æ–≤—Ç–æ—Ä–∏—Ç–∏ –ø–æ–º–∏–ª–∫–∏")
        print("2. üö™ –í–∏–π—Ç–∏ –∑ —Ç–µ—Å—Ç—É")

        choice = input("–í–≤–µ–¥–∏ 1 –∞–±–æ 2: ").strip()
        if choice == "1":
            return "retry"
        else:
            return "exit"
    else:
        print("\nüéâ –Ü–¥–µ–∞–ª—å–Ω–æ! –í—Å—ñ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –ø—Ä–∞–≤–∏–ª—å–Ω—ñ!")
        return "exit"

if __name__ == "__main__":
    main()

